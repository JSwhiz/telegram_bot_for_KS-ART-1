package main

import (
	"log"
	"os"
	"telegram/handlers"
	"telegram/repository"
	"github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"database/sql"
	_ "github.com/lib/pq"
)

func main() {
	// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
	token := os.Getenv("TELEGRAM_BOT_TOKEN")
	if token == "" {
		log.Fatal("TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
	}

	// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
	connStr := os.Getenv("DB_CONNECTION_STRING")
	db, err := sql.Open("postgres", connStr)
	if err != nil {
		log.Fatal(err)
	}

	// –°–æ–∑–¥–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –∑–∞—è–≤–∫–∞–º–∏
	userRepository := repository.NewUserRepository(db)
	requestRepository := repository.NewRequestRepository(db)

	// –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
	bot, err := tgbotapi.NewBotAPI(token)
	if err != nil {
		log.Fatal(err)
	}
	bot.Debug = true
	log.Printf("–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ %s", bot.Self.UserName)

	// –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	updates := bot.GetUpdatesChan(u)

	for update := range updates {
		if update.Message != nil {
			if update.Message.Text == "/start" {
				sendWelcomeMessage(bot, update.Message.Chat.ID)
			}
		}

		// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback-–∑–∞–ø—Ä–æ—Å—ã
		if update.CallbackQuery != nil {
			handlers.HandleServiceSelection(bot, update, userRepository, requestRepository)
		}
	}
}

// sendWelcomeMessage –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–∞–π–ª–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–∞–º–∏
func sendWelcomeMessage(bot *tgbotapi.BotAPI, chatID int64) {
	// –¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ —Å—Å—ã–ª–∫–æ–π –Ω–∞ PDF
	messageText := "üëã –ü—Ä–∏–≤–µ—Ç! –ú—ã ‚Äî KS-ART, –Ω–∞—á–∏–Ω–∞—é—â–∏–π IT-—Å—Ç–∞—Ä—Ç–∞–ø, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–µ—Ç —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –±–∏–∑–Ω–µ—Å–∞.\n\n" +
		"üìÑ –ú—ã –ø—Ä–∏–∫—Ä–µ–ø–∏–ª–∏ PDF-–¥–æ–∫—É–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –±–æ–ª—å—à–µ –æ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏.\n\n" +
		"üíº –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É, —Å –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å:\n\n" 

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º PDF —Ñ–∞–π–ª —Å —Ç–µ–∫—Å—Ç–æ–º
	pdfFile := tgbotapi.NewDocument(chatID, tgbotapi.FilePath("../logs/–ü–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ KS-ART?.pdf"))
	pdfFile.Caption = messageText

	// –ö–Ω–æ–ø–∫–∏ —Å –≤—ã–±–æ—Ä–æ–º —É—Å–ª—É–≥ (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ)
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üåç –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "service_web"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üì± –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π", "service_app"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üé® –î–∏–∑–∞–π–Ω", "service_design"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üñ• –ü–æ—Å—Ç–∞–≤–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è", "service_hardware"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üîß IT —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ", "service_it"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚ùì –î—Ä—É–≥–æ–µ", "service_other"),
		),
	)

	// –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
	pdfFile.ReplyMarkup = keyboard

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
	bot.Send(pdfFile)
}
